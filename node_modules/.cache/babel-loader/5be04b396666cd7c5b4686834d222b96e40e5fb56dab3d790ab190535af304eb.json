{"ast":null,"code":"import store from \"@/store\";\nimport { createRouter, createWebHistory } from \"vue-router\";\nconst routes = [{\n  path: \"/\",\n  name: \"main\",\n  component: () => import(\"@/views/Main.vue\")\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach(async (to, form, next) => {\n  if (store.state.menu.menuData.length == 0) {\n    store.ad;\n\n    // 如果 addRoute 并未完成，路由守卫会一层一层的执行执行，直到 addRoute 完成，找到对应的路由\n    next({\n      ...to,\n      replace: true\n    });\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["store","createRouter","createWebHistory","routes","path","name","component","router","history","process","env","BASE_URL","beforeEach","to","form","next","state","menu","menuData","length","ad","replace"],"sources":["E:/app/college-application/src/router/index.js"],"sourcesContent":["import store from \"@/store\";\nimport { createRouter, createWebHistory } from \"vue-router\";\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"main\",\n    component: () => import(\"@/views/Main.vue\"),\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\nrouter.beforeEach(async (to, form, next) => {\n  if (store.state.menu.menuData.length == 0) {\n    store.ad\n      \n      // 如果 addRoute 并未完成，路由守卫会一层一层的执行执行，直到 addRoute 完成，找到对应的路由\n      next({ ...to, replace: true });\n    \n  } else {\n    next();\n  }\n});\n\nexport default router;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,SAAS;AAC3B,SAASC,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAE3D,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,kBAAkB;AAC5C,CAAC,CACF;AAED,MAAMC,MAAM,GAAGN,YAAY,CAAC;EAC1BO,OAAO,EAAEN,gBAAgB,CAACO,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CR;AACF,CAAC,CAAC;AAEFI,MAAM,CAACK,UAAU,CAAC,OAAOC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAC1C,IAAIf,KAAK,CAACgB,KAAK,CAACC,IAAI,CAACC,QAAQ,CAACC,MAAM,IAAI,CAAC,EAAE;IACzCnB,KAAK,CAACoB,EAAE;;IAEN;IACAL,IAAI,CAAC;MAAE,GAAGF,EAAE;MAAEQ,OAAO,EAAE;IAAK,CAAC,CAAC;EAElC,CAAC,MAAM;IACLN,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}